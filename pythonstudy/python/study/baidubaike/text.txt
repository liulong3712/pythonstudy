Python
Python（英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/）, 是一种面向对象、解释型计算机程序设计语言，由Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议[1] 
。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。Python具有丰富和强大的库。它常被昵称为胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。常见的一种应用情形是，使用Python快速生成程序的原型（有时甚至是程序的最终界面），然后对其中[2] 
有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。需要注意的是在您使用扩展类库时可能需要考虑平台问题，某些可能不提供跨平台的实现。

计算机程序设计语言
计算机程序设计语言,通常简称为编程语言，是一组用来定义计算机程序的语法规则。它是一种被标准化的交流技巧，用来向计算机发出指令。一种计算机语言让程序员能够准确地定义计算机所需要使用的数据，并精确地定义在不同情况下所应当采取的行动。

自由软件
根据自由软件基金会的定义，自由软件是一种可以不受限制地自由使用、复制、研究、修改和分发的软件。可以买卖。这方面的不受限制正是自由软件最重要的本质。要将软件以自由软件的形式发表，通常是让软件以“自由软件授权协议”的方式被分配发布，以及公开的软件原始码。 自由软件对全世界的商业发展有巨大的贡献。自由软件使成千上万的人的日常工作更加便利，为了满足用户的各种应用需要，它以一种不可思议的速度发展。自由软件是信息社会下以开放创新、共同创新为特点的创新2.0模式在软件开发与应用领域的典型体现。主要许可证有GPL和BSD许可证两种。

解释器
解释器（英语：Interpreter），又译为直译器，是一种电脑程序，能够把高级编程语言一行一行直接转译运行。解释器不会一次把整个程序转译出来，只像一位“中间人”，每次运行程序时都要先转成另一种语言再作运行，因此解释器的程序运行速度比较缓慢。它每转译一行程序叙述就立刻运行，然后再转译下一行，再运行，如此不停地进行下去。

gnu
GNU计划，又称革奴计划，是由Richard Stallman在1983年9月27日公开发起的。它的目标是创建一套完全自由的操作系统。Richard Stallman最早是在net.unix-wizards新闻组上公布该消息，并附带《GNU宣言》等解释为何发起该计划的文章，其中一个理由就是要“重现当年软件界合作互助的团结精神”。为保证GNU软件可以自由地“使用、复制、修改和发布”，所有GNU软件都有一份在禁止其他人添加任何限制的情况下授权所有权利给任何人的协议条款，GNU通用公共许可证（GNU General Public License，GPL）。即“反版权”（或称Copyleft）概念。

c++
C++是在C语言的基础上开发的一种面向对象编程语言，应用广泛；C++支持多种编程范式 －－面向对象编程、泛型编程和过程化编程。最新正式标准C++于2014年8月18日公布。[1] 
其编程领域众广，常用于系统开发，引擎开发等应用领域，是至今为止最受广大程序员受用的最强大编程语言之一,支持类：封装、继承、多态等特性!

阿姆斯特丹
阿姆斯特丹，是荷兰最大城市，市区人口约110万。位于该国西部省份荷兰省。其名称源于Amstel dam，这表明了该城市的起源：一个位于阿姆斯特尔河上的水坝，即今水坝广场址。12世纪晚期一个小渔村建于此，而后由于贸易的发展，阿姆斯特丹在荷兰黄金时代一跃而成为世界上重要的港口。在那个时代，该城是金融和钻石的中心。19和20世纪，该城扩展，许多新的街坊与近郊住宅区形成。现为欧洲第四大航空港（前三分为伦敦、巴黎、法兰克福），阿姆斯特丹有很多旅游景点，包括历史悠久的运河网、荷兰国家博物馆、凡·高博物馆、安妮之家、红灯区以及许多大麻咖啡馆。每年有大约420万游客来此观光。作为当前荷兰第一大城市，阿姆斯特丹历经了从渔村到大都市的发展过程，经历了辉煌与破坏，以及世界大战的洗礼，从一定程度上讲，她的历史也是荷兰历史的一个缩影。

Monty Python
Monty Python是英国六人喜剧团体，喜剧界的披头士。成员包括：格雷厄姆·查普曼 (Graham Chapman)： Graham毕业于剑桥大学医学专业。大学期间结识Cleese，两人开始一起创作。Graham是派森成员中最奇才，最离经叛世不守常规的人。他在派森最著名的两部电影中扮演主角亚瑟王和布莱恩。[1] 
约翰·克里斯 (John Cleese)：John毕业于剑桥大学法律专业。他是一个非常理性，做事一丝不苟的人。2010年英国喜剧圈的投票结果将John排在英国最伟大喜剧家的第二位。他是最知名派森成员，尤善一本正经的冷幽默及黑色幽默。特里·吉列姆 (Terry Gilliam)：Terry G在东方学院学习过物理和艺术，毕业于政治社会学专业。他是派森中唯一来自美国的成员，是动画创作者，作品充满了奇异的想象力和意识流。他还是一位成功的导演，作品包括《12只猴子》、《巴西》。艾瑞克·爱都 (Eric Idle)：Eric毕业于剑桥大学英语专业，是首位接纳女性的脚灯社主席。他是派森中最有音乐天赋的成员，创作了Galaxy Song, Bright Side of Life等著名歌曲。他善于创作和表演各种跟语言相关的小品。特瑞·琼斯(Terry Jones)：Terry J毕业于牛津大学英语专业。他是派森中的历史学家，撰写过多部历史书籍，是欧洲中世纪历史学者。同时还是导演。迈克尔·帕林 (Michael Palin)：Michael毕业于牛津大学现代史专业。他是最亲的派森，被誉为英国最好的男人。他和Terry J一起创作，风格侧重于跟动作相关的喜剧。也是派森成员中扮演角色最多变的一位。

Tiobe
TIOBE排行榜是根据互联网上有经验的程序员、课程和第三方厂商的数量，并使用搜索引擎（如Google、Bing、Yahoo!）以及Wikipedia、Amazon、YouTube统计出排名数据，只是反映某个编程语言的热门程度，并不能说明一门编程语言好不好，或者一门语言所编写的代码数量多少。

接口
接口泛指实体把自己提供给外界的一种抽象化物（可以为另一实体），用以由内部操作分离出外部沟通方法，使其能被修改内部而不影响外界其他实体与其交互的方式。人类与电脑等信息机器或人类与程序之间的接口称为用户界面。电脑等信息机器硬件组件间的接口叫硬件接口。电脑等信息机器软件组件间的接口叫软件接口。在计算机中，接口是计算机系统中两个独立的部件进行信息交换的共享边界。这种交换可以发生在计算机软、硬件，外部设备或进行操作的人之间，也可以是它们的结合。

应用程式
应用程式是电脑软体的主要分类之一，是指为针对使用者的某种应用目的所撰写的软体。[1] 
应用程式通常又被分为两部分：图形使用者介面（GUI）和引擎（Engien）它与应用软体的概念不同。应用软体指使用的目的分类，可以是单一程式或其他从属元件的集合，例如Microsoft Office、OpenOffice。应用程式指单一可执行档或单一程式，例如Word、Photoshop。日常中可不将两者仔细区分。一般视程式为软体的一个组成部分。[2] 


界面设计
界面设计是人与机器之间传递和交换信息的媒介，FaceUI称包括硬件界面和软件界面，是计算机科学与心理学、设计艺术学、认知科学和人机工程学的交叉研究领域。近年来，随着信息技术与计算机技术的迅速发展，网络技术的突飞猛进，人机界面设计和开发已成为国际计算机界和设计界最为活跃的研究方向。

perl
Perl，一种功能丰富的计算机程序语言，运行在超过100种计算机平台上，适用广泛，从大型机到便携设备，从快速原型创建到大规模可扩展开发。[1] 
Perl最初的设计者为拉里·沃尔（Larry Wall），于1987年12月18日发表。现在的版本为Perl 6，于2015年12月25日更新。Perl借取了C、sed、awk、shell 脚本语言以及很多其他程序语言的特性，其中最重要的特性是它内部集成了正则表达式的功能，以及巨大的第三方代码库CPAN。简而言之，Perl像C一样强大，像awk、sed等脚本描述语言一样方便，被Perl语言爱好者称之为“一种拥有各种语言功能的梦幻脚本语言”、“Unix 中的王牌工具”。Perl 一般被称为“实用报表提取语言”（Practical Extraction and Report Language），你也可能看到“perl”，所有的字母都是小写的。一般，“Perl”，有大写的 P，是指语言本身，而“perl”，小写的 p，是指程序运行的解释器。

if语句
if语句是指编程语言（包括c语言，C#，VB，汇编语言等）中用来判定所给定的条件是否满足，根据判定的结果（真或假）决定执行给出的两种操作之一。

缩进
办公软件Microsoft Word中，缩进是指调整文本与页面边界之间的距离。有多种方法设置段落的缩进方式，但设置前一定要选中段落或将插入点放到要进行缩进的段落内。

PyPy
PyPy是用Python实现的Python解释器。

Haskell
Haskell是一种标准化的、通用纯函数式编程语言，有非限定性语义和强静态类型。它的命名源自美国逻辑学家Haskell Brooks Curry，他在数学逻辑方面的工作使得函数式编程语言有了广泛的基础。在Haskell中，函数是一等公民。作为函数式编程语言，主要控制结构是函数。Haskell语言是1990年在编程语言Miranda的基础上标准化的，并且以λ演算（Lambda-Calculus)为基础发展而来。具有“证明即程序、结论公式即程序类型”的特征。这也是Haskell语言以希腊字母「λ」（Lambda）作为自己标志的原因。Haskell语言的最主要的执行环境是GHC。

zope
Zope是一个开放源代码的Web应用服务器，官方网站位于 http://zope.org Zope目前有2个比较独立的版本，Zope 2系列和Zope 3系列。Zope 3是汲取了Zope 2的教训，对Zope 2的重写，是一个采用了现代设计模式的、基于组件架构的应用服务器。有人说Zope 3就是一个Python版本的轻量级J2EE框架。 Zope 2特别适合脚本开发人员，直接通过浏览器就可快速构建一个应用。

VBScript
VBScript是Visual Basic Script的简称，即 Visual Basic 脚本语言，有时也被缩写为VBS。它是一种微软环境下的轻量级的解释型语言，它使用COM组件、WMI、WSH、ADSI访问系统中的元素，对系统进行管理。同时它又是asp动态网页默认的编程语言，配合asp内建对象和ADO对象，用户很快就能掌握访问数据库的asp动态网页开发技术。

Python技术手册
《Python技术手册（第2版）》是一本全面介绍有关Python语言和Python程序开发专业知识的参考手册。书中详细介绍了Python开发工具的安装和使用、Python语言的语法结构、Python内置对象、库和模块以及Python与其他语言的扩展和嵌入，并专门介绍了有关Python网络和Web编程的内容和实例。

Google
Google（中文名：谷歌），是一家美国的跨国科技企业，致力于互联网搜索、云计算、广告技术等领域，开发并提供大量基于互联网的产品与服务，其主要利润来自于AdWords等广告服务。Google由当时在斯坦福大学攻读理工博士的拉里·佩奇和谢尔盖·布卢姆共同创建，因此两人也被称为“Google Guys”。1998年9月4日，Google以私营公司的形式创立，设计并管理一个互联网搜索引擎“Google搜索”。Google网站则于1999年下半年启用。Google的使命是整合全球信息，使人人皆可访问并从中受益。Google是第一个被公认为全球最大的搜索引擎，在全球范围内拥有无数的用户[1] 
。谷歌于美国时间2015年8月10日宣布对企业架构进行调整，创办一家名为Alphabet的“伞形公司”（Umbrella Company），Google成为Alphabet旗下子公司。[2] 
2015年11月4日，谷歌无人机业务主管沃斯透露，预计能在2017年推出无人机送货服务。[3] 
根据业界权威机构最新发布的2015年度“世界品牌500强”，得益于美国搜索和广告业务的增长，谷歌重返榜首，苹果和亚马逊分别位居第二和第三名。[4] 
2016年6月8日，《2016年BrandZ全球最具价值品牌百强榜》公布，谷歌以2291.98亿美元的品牌价值重新超越苹果成为百强第一。[5] 


字节码
字节码（Byte-code）是一种包含执行程序，由一序列 op 代码/数据对组成的二进制文件。是一种中间码。

类型

FLOSS
FLOSS（Free/Libre and Open Source Software）:自由/开源软件。 自由/开源软件(FLOSS)被证实为当今最好的开放、合作、国际化产品和开发样例之一，已经为全世界各大机构，包括政府、政策、商业、学术研究和开源领域带来巨大的利益。

源代码
影片《源代码》是由邓肯·琼斯执导，杰克·吉伦哈尔、维拉·法米加、米歇尔·莫娜汉等人联袂出演。影片于2011年4月1日在美国上映。影片讲述了一位在阿富汗执行任务的美国空军飞行员柯尔特·史蒂文斯，醒来时发现自己正处在一辆前往芝加哥的火车上，并就此经历的一系列惊心动魄的事件。

二进制代码
二进制代码：由两个基本字符'0'、'1'组成的代码。其中，码元："一位"二进制代码。码字：N个码元可以组成的不同组合，任意一个组合称一个码字二进制编码：用不同码字表示不同的信息的方法就叫二进制编码。如用1111表示15。区别例子：对15进行二进制编码的结果为1111，共需要4位二进制代码。二进制代码指令：是机器语言的指令集体系结构的表示方式。好比"加"在汇编中用add表示，类似的在这个中则是用1100表示(1100只是举例用，实际不是)机器语言：又称机器码，是用"二进制代码指令"表达(不是二进制代码)的计算机语言

机器语言
机器语言（machine language）是一种指令集的体系。这种指令集，称机器码（machine code），是电脑的CPU可直接解读的数据。机器码有时也被称为原生码（Native Code），这个名词比较强调某种编程语言或库，它与运行平台相关的部份。[1] 


正则表达式
正则表达式，又称正规表示法、常规表示法。（英语：Regular Expression，在代码中常简写为regex、regexp或RE），计算机科学的一个概念。正则表达式使用单个字符串来描述、匹配一系列符合某个句法规则。在很多文本编辑器里，正则表达式通常被用来检索、替换那些符合某个模式的文本。许多程序设计语言都支持利用正则表达式进行字符串操作。例如，在Perl中就内建了一个功能强大的正则表达式引擎，还有java语言自带的。正则表达式这个概念最初是由Unix中的工具软件（例如sed和grep）普及开的。正则表达式通常缩写成“regex”，单数有regexp、regex，复数有regexps、regexes、regexen。

线程
线程，有时被称为轻量级进程(Lightweight Process，LWP），是程序执行流的最小单元。一个标准的线程由线程ID，当前指令指针(PC），寄存器集合和堆栈组成。另外，线程是进程中的一个实体，是被系统独立调度和分派的基本单位，线程自己不拥有系统资源，只拥有一点儿在运行中必不可少的资源，但它可与同属一个进程的其它线程共享进程所拥有的全部资源。一个线程可以创建和撤消另一个线程，同一进程中的多个线程之间可以并发执行。由于线程之间的相互制约，致使线程在运行中呈现出间断性。线程也有就绪、阻塞和运行三种基本状态。就绪状态是指线程具备运行的所有条件，逻辑上可以运行，在等待处理机；运行状态是指线程占有处理机正在运行；阻塞状态是指线程在等待一个事件（如某个信号量），逻辑上不可执行。每一个程序都至少有一个线程，若程序只有一个线程，那就是程序本身。线程是程序中一个单一的顺序控制流程。进程内一个相对独立的、可调度的执行单元，是系统独立调度和分派CPU的基本单位指运行中的程序的调度单位。在单个程序中同时运行多个线程完成不同的工作，称为多线程。

api
API（Application Programming Interface,应用程序编程接口）是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。

Tkinter
Tkinter模块("Tk 接口")是Python的标准Tk GUI工具包的接口.Tk和Tkinter可以在大多数的Unix平台下使用,同样可以应用在Windows和Macintosh系统里.Tk8.0的后续版本可以实现本地窗口风格,并良好地运行在绝大多数平台中.

网络编程
《网络编程》通过使用套接字来达到进程间通信目的的编程就是网络编程。windows提供的基于网络编程的就是套接字也就是winsock，同时Winpcap也是一个比较方便的工具。网络编程从大的方面说就是对信息的发送到接收，中间传输为物理线路的作用，编程人员可以不用考虑……网络编程最主要的工作就是在发送端把信息通过规定好的协议进行组装包，在接收端按照规定好的协议把包进行解析，从而提取出对应的信息，达到通信的目的！中间最主要的就是数据包的组装，数据包的过滤，数据包的捕获，数据包的分析，当然最后再做一些处理！代码,开发工具,数据库,服务器架设和网页设计这5部分你都要接触

BitTorrent
比特流（BitTorrent）是一种内容分发协议，由布拉姆·科恩自主开发。它采用高效的软件分发系统和点对点技术共享大体积文件（如一部电影或电视节目），并使每个用户像网络重新分配结点那样提供上传服务。一般的下载服务器为每一个发出下载请求的用户提供下载服务，而BitTorrent的工作方式与之不同。分配器或文件的持有者将文件发送给其中一名用户，再由这名用户转发给其它用户，用户之间相互转发自己所拥有的文件部分，直到每个用户的下载都全部完成。这种方法可以使下载服务器同时处理多个大体积文件的下载请求，而无须占用大量带宽。

秋之回忆
《秋之回忆》是日本KID公司推出的一款恋爱冒险类游戏系列，于1999年9月30日发行了第一部作品《秋之回忆1》，至2010年共发售7部正传作品。

PyGTK
PyGTK让你用Python轻松创建具有图形用户界面的程序.底层的GTK+提供了各式的可视元素和功能,如果需要,你能开发在GNOME桌面系统运行的功能完整的软件。[1] 


wxPython
wxPython是Python语言的一套优秀的GUI图形库。允许Python程序员很方便的创建完整的、功能键全的GUI用户界面。 wxPython是作为优秀的跨平台GUI库wxWidgets的Python封装和Python模块的方式提供给用户的。比如安装ulipad要安装wxPython库才能正常完整工作。

Pygame
Pygame是跨平台Python模块，专为电子游戏设计。

MySQLdb
MySQL是一个小型关系型数据库管理系统，开发者为瑞典MySQLAB公司。在2008年1月16号被Sun公司收购。目前MySQL被广泛地应用在Internet上的中小型网站中。由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，许多中小型网站为了降低网站总体拥有成本而选择了MySQL作为网站数据库。

SWIG
SWIG是一家全球性视频点播和在线直播网络平台，将您已有的经过首轮播出过的节目资源进行第二次屏幕盈利。

ActivePython

PyScripter
PyScripter是一个使用Delphi开发的开源的Python集成开发环境（IDE），发布于MIT协议之下。

bpython
bpython是一个增强的 Python 交互解释器，使用 curses 包开发，需要 pygments 依赖。

VIM
Vim是一个类似于Vi的著名的功能强大、高度可定制的文本编辑器，在Vi的基础上改进和增加了很多特性。[1] 
VIM是纯粹的自由软件。Vim普遍被推崇为类Vi编辑器中最好的一个，事实上真正的劲敌来自Emacs的不同变体。1999 年Emacs被选为Linuxworld文本编辑分类的优胜者，Vim屈居第二。但在2000年2月Vim赢得了Slashdot Beanie的最佳开放源代码文本编辑器大奖，又将Emacs推至二线， 总的来看， Vim和Emacs同样都是非常优秀的文本编辑器。[1] 


TextMate
TextMate是Mac下的著名的文本编辑器软件，与BBedit一起并称苹果机上的emacs和vim。尤其适合程序员使用，可以定制许多贴心使用的功能。TextMate的Bundles是TextMate的一个亮点，可以有效的提高开发速度。包括DHH在内的Rails核心开发者一直都使用TextMate进行开发，原因就是他们主要都在使用Mac OS系统，并且TextMate具备出色的界面、强大的宏定义、以及可下载和编辑的宏定义包（bundles），这些都帮助开发者将编码的效率提升到最高。

EditPlus
EditPlus是一款由韩国 Sangil Kim （ES-Computing）出品的小巧但是功能强大的可处理文本、HTML和程序语言的Windows编辑器，你甚至可以通过设置用户工具将其作为C,Java,Php等等语言的一个简单的IDE。EditPlus（文字编辑器）汉化版是一套功能强大，可取代记事本的文字编辑器，拥有无限制的撤消与重做、英文拼字检查、自动换行、列数标记、搜寻取代、同时编辑多文件、全屏幕浏览功能。而它还有一个好用的功能，就是它有监视剪贴板的功能，同步于剪贴板可自动粘贴进 EditPlus 的窗口中省去粘贴的步骤。另外它也是一个非常好用的HTML编辑器，它除了支持颜色标记、HTML 标记，同时支持C、C++、Perl、Java，另外，它还内建完整的HTML & CSS1 指令功能，对于习惯用记事本编辑网页的朋友，它可帮你节省一半以上的网页制作时间，若你有安装IE3.0 以上版本，它还会结合IE浏览器于 EditPlus 窗口中，让你可以直接预览编辑好的网页（若没安装IE，也可指定浏览器路径）。因此，它是一个相当棒又多用途多状态的编辑软件。 [1] 


pspad
PSPad功能非常强大，UltraEdit、Editplus、EmEditor能做的（比如多文件编辑、支持“工程”、语法高亮、HEX编辑，内置FTP功能），PSPad也能做到，甚至做得更好！PSPad里集成了许多非常实用的工具：

集成开发环境
集成开发环境（IDE，Integrated Development Environment ）是用于提供程序开发环境的应用程序，一般包括代码编辑器、编译器、调试器和图形用户界面工具。集成了代码编写功能、分析功能、编译功能、调试功能等一体化的开发软件服务套。所有具备这一特性的软件或者软件套（组）都可以叫集成开发环境。如微软的Visual Studio系列，Borland的C++ Builder、Delphi系列等。该程序可以独立运行，也可以和其它程序并用。IDE多被用于开发HTML应用软件。例如，许多人在设计网站时使用IDE（如HomeSite、DreamWeaver等），因为很多项任务会自动生成。

IronPython
IronPython 是一种在 NET 和 Mono 上实现的 Python 语言，由 Jim Hugunin（同时也是 Jython 创造者）所创造。

pylons
Pylons是一个开放源代码的Web应用框架，使用python语言编写。它对WSGI标准进行了扩展应用，提升了重用性且将功能分割到独立的模块中。

Plone
Plone是免费的、开放源代码的内容管理系统（Content Management System，CMS）。Plone着重于适合各种组织使用。它带有一个工作流引擎、预先配置的安全和角色系统、一组内容类型和多语言支持。有来自全世界的众多开发者、作者和测试者每天为Plone做各种贡献。Plone是基于内容管理框架的。（Content Management Framework）。

wiki
Wiki一词来源于夏威夷语的“wee kee wee kee”, 发音wiki, 原本是“快点快点”的意思，被译为“维基”或“维客”。一种多人协作的写作工具。Wiki站点可以有多人（甚至任何访问者）维护，每个人都可以发表自己的意见，或者对共同的主题进行扩展或者探讨。Wiki也指一种超文本系统。这种超文本系统支持面向社群的协作式写作，同时也包括一组支持这种写作。

星战前夜
《星战前夜》是冰岛CCP公司开发的一款PC端网游，国服由世纪天成代理运营。游戏以宏大的太空为背景，高度融合硬科幻元素，为玩家展现了一个极其自由的虚拟宇宙沙盒世界。玩家驾驶各式宇宙飞船在成千上万的恒星系与未知虫洞空间中穿梭。在游戏的沙盒宇宙中能进行各式活动，包括采矿、工业制造 、科学研究 、金融贸易、探索考古以及PVP/PVE战斗等。[1] 
玩家可从事的活动类型随着相关技能的学习而递增，即使玩家没有上线，游戏中技能的学习也随时都在进行。《EVE Online》揽获包括GDC在内的众多世界游戏大奖，曾在欧美最著名游戏网站“MMORPG”中多次获得“世界最佳游戏”称号，[2] 
其精妙绝伦的制作素质还使它被纽约现代艺术博物馆等知名展馆收录。[3] 
出于沙盒理念，EVE将所有玩家集结于单个服务器内并且只设置世界服（宁静）与中国服（晨曦）。另外，为了实现空天地一体化作战而专门独立开发的《DUST 514》、《EVE：瓦尔基里》两款游戏将在近期配合《EVE Online》实现三位一体的战场联动。

计算机
计算机（computer）俗称电脑，是一种用于高速计算的电子计算机器，可以进行数值计算，又可以进行逻辑计算，还具有存储记忆功能。是能够按照程序运行，自动、高速处理海量数据的现代化智能电子设备。由硬件系统和软件系统所组成，没有安装任何软件的计算机称为裸机。可分为超级计算机、工业控制计算机、网络计算机、个人计算机、嵌入式计算机五类，较先进的计算机有生物计算机、光子计算机、量子计算机等。计算机发明者约翰·冯·诺依曼。计算机是20世纪最先进的科学技术发明之一，对人类的生产活动和社会活动产生了极其重要的影响，并以强大的生命力飞速发展。它的应用领域从最初的军事科研应用扩展到社会的各个领域，已形成了规模巨大的计算机产业，带动了全球范围的技术进步，由此引发了深刻的社会变革，计算机已遍及一般学校、企事业单位，进入寻常百姓家，成为信息社会中必不可少的工具。计算机的应用在中国越来越普遍，改革开放以后，中国计算机用户的数量不断攀升，应用水平不断提高，特别是互联网、通信、多媒体等领域的应用取得了不错的成绩。1996年至2009 年，计算机用户数量从原来的630万增长至6710 万台，联网计算机台数由原来的2.9万台上升至5940万台。互联网用户已经达到3.16 亿，无线互联网有6.7 亿移动用户，其中手机上网用户达1.17 亿，为全球第一位。

perl
Perl，一种功能丰富的计算机程序语言，运行在超过100种计算机平台上，适用广泛，从大型机到便携设备，从快速原型创建到大规模可扩展开发。[1] 
Perl最初的设计者为拉里·沃尔（Larry Wall），于1987年12月18日发表。现在的版本为Perl 6，于2015年12月25日更新。Perl借取了C、sed、awk、shell 脚本语言以及很多其他程序语言的特性，其中最重要的特性是它内部集成了正则表达式的功能，以及巨大的第三方代码库CPAN。简而言之，Perl像C一样强大，像awk、sed等脚本描述语言一样方便，被Perl语言爱好者称之为“一种拥有各种语言功能的梦幻脚本语言”、“Unix 中的王牌工具”。Perl 一般被称为“实用报表提取语言”（Practical Extraction and Report Language），你也可能看到“perl”，所有的字母都是小写的。一般，“Perl”，有大写的 P，是指语言本身，而“perl”，小写的 p，是指程序运行的解释器。

高级语言
高级语言（High-level programming language）相对于机器语言（machine language，是一种指令集的体系。这种指令集，称机器码（machine code），是电脑的CPU可直接解读的数据）而言。是高度封装了的编程语言，与低级语言相对。它是以人类的日常语言为基础的一种编程语言，使用一般人易于接受的文字来表示（例如汉字、不规则英文或其他外语），从而使程序编写员编写更容易，亦有较高的可读性，以方便对电脑认知较浅的人亦可以大概明白其内容。由于早期电脑业的发展主要在美国，因此一般的高级语言都是以英语为蓝本。在1980年代，当东亚地区开始使用电脑时，在日本、台湾及中国大陆都曾尝试开发用各自地方语言编写的高级语言，当中主要都是改编BASIC或专用于数据库数据访问的语言，但是随着编程者的外语能力提升，现时的有关开发很少。由于汇编语言依赖于硬件体系，且助记符量大难记，于是人们又发明了更加易用的所谓高级语言。在这种语言下，其语法和结构更类似汉字或者普通英文，且由于远离对硬件的直接操作，使得一般人经过学习之后都可以编程。高级语言通常按其基本类型、代系、实现方式、应用范围等分类。

BCPL
Basic Combined Programming Language(BCPL),是一种早期的高级语言。

pascal
Pascal的名称是为了纪念十七世纪法国著名哲学家和数学家Blaise Pascal而来的，它由瑞士Niklaus Wirth教授于六十年代末设计并创立的。Pascal语言语法严谨，层次分明，程序易写，可读性强，是第一个结构化编程语言。Pascal计算机程序教程如今已经有专业化课程，并且越来越完善和严格化。Pascal有6[1] 
个主要的版本，分别是Action Pascal[1] 
 Unextended Pascal、Extended Pascal、Object-Oriented Extensions to Pascal、Borland Pascal和Delphi Object Pascal。

smalltalk
Smalltalk被公认为历史上第二个面向对象的程序设计语言和第一个真正的集成开发环境 (IDE)。由Alan Kay，Dan Ingalls，Ted Kaehler，Adele Goldberg等于70年代初在Xerox PARC开发。Smalltalk对其它众多的程序设计语言的产生起到了极大的推动作用，主要有：Objective-C，Actor， Java 和Ruby等。90年代的许多软件开发思想得利于Smalltalk，例如Design Patterns， Extreme Programming(XP)和Refactoring等。20世纪70年代到80年代前期，美国施乐公司的帕洛阿尔托研究中心（PARC）开发了Smalltalk编程语言。从Smalltalk-72、Smalltalk-78到Smalltalk-80，他们开发完成了整个Smalltalk系列，Smalltalk编程语言对近代面向对象编程语言影响很大，所以称之为“面向对象编程之母”。（此段摘自《松本行宏的程序世界》）

中央处理器
中央处理器（CPU，Central Processing Unit）是一块超大规模的集成电路，是一台计算机的运算核心（Core）和控制核心（ Control Unit）。它的功能主要是解释计算机指令以及处理计算机软件中的数据。中央处理器主要包括运算器（算术逻辑运算单元，ALU，Arithmetic Logic Unit）和高速缓冲存储器（Cache）及实现它们之间联系的数据（Data）、控制及状态的总线（Bus）。它与内部存储器（Memory）和输入/输出（I/O）设备合称为电子计算机三大核心部件。

创新2.0
创新2.0，简单点说就是以前创新1.0的升级，1.0是指工业时代的创新形态，2.0则是指信息时代、知识社会的创新形态。创新2.0推动了科技创新主体由”产学研“向”政产学研用“，再向”政用产学研“协同发展的转变。专业点说即面向知识社会的下一代创新，它的应用可以让人了解目前由于信息通讯技术（ICT）发展给社会带来深刻变革而引发的科技创新模式的改变——从专业科技人员实验室研发出科技创新成果后用户被动使用到技术创新成果的最终用户直接或通过共同创新平台参与技术创新成果的研发和推广应用全过程。面向知识社会的科学2.0、技术2.0和管理2.0三者的相互作用共同塑造了面向知识社会的创新2.0引擎。创新2.0是知识社会条件下以人为本的典型创新模式，其例子包括Web 2.0，开放源代码、自由软件以及麻省理工学院提出的微观装配实验室等。

开放源代码
开放源代码（Open source code）也称为源代码公开，指的是一种软件发布模式。一般的软件仅可取得已经过编译的二进制可执行档，通常只有软件的作者或著作权所有者等拥有程序的原始码。有些软件的作者会将原始码公开，此称之为“源代码公开”，但这并不一定符合“开放原代码”的定义及条件，因为作者可能会设定公开原始码的条件限制，例如限制可阅读原始码的对象、限制衍生品等。

openBSD
OpenBSD是一个多平台的，基于4.4BSD的类UNIX操作系统，是BSD衍生出的三种免费操作系统（另外两种是NetBSD和FreeBSD）之一，被称为世界上最安全的操作系统。专案领导人 Theo de Raadt在1995年发起了OpenBSD 专案，希望创造一个注重安全的操作系统。

免费软件
所谓免费软件(Freeware)就是可以自由而且免费的使用该软件，并拷贝给别人，而且不必支付任何费用给程序的作者，使用上也不会出现任何日期的限制或是软件使用上的限制。不过当您拷贝给别人的时候，必须将完整的软件档案拷贝给他人，且不得收取任何的费用金额或转为其它商业用途。在您未经程序作者的同意下，更是不能擅自修改该软件的程序代码，否则视同侵权。

GNU宽通用公共许可证
GNU通用公共许可协议（英语：GNU General Public License，缩写：GNU GPL、GPL），是一个广泛被使用的自由软件许可协议条款，最初由理查德·斯托曼(Richard Matthrew Stallman)为GNU计划而撰写。此许可证最新版本为“第3版”（v3），于2007年6月29日发布。GNU宽通用公共许可证是改自GPL的另一个版本，其目的是为了应用于一些软件库。GPL给予了计算机程序自由软件的定义，并且使用Copyleft来确保程序的自由被完善的保留。

开放源代码软件
开放源码软件(open-source)是一个新名词，它被定义为描述其源码可以被公众使用的软件，并且此软件的使用，修改和分发也不受许可证的限制。开放源码软件通常是有copyright的，它的许可证可能包含这样一些限制： 蓄意的保护它的开放源码状态，著者身份的公告，或者开发的控制。“开放源码”正在被公众利益软件组织注册为认证标记，这也是创立正式的开放源码定义的一种手段。开放源码软件主要被散布在全世界的编程者队伍所开发，但是同时一些大学，政府机构承包商，协会和商业公司也开发它。源代码开放是信息技术发展引发网络革命所带来的面向未来以开放创新、共同创新为特点的、以人为本的创新2.0模式在软件行业的典型体现和生动注解。开放源码软件在历史上曾经与UNIX，Internet联系的非常紧密。在这些系统中许多不同的硬件需要支持，而且源码分发是实现交叉平台可移植性的唯一实际可行的办法。在DOS，Windows，Macintosh平台上仅仅有很少的用户有可用的编译器，开放源码软件更加不普遍。对开放源码开发模式的更详细的讨论请看Eric Raymond写的“The Cathedral and the Bazaar”。[1] 


自由软件运动
自由软件运动是由那些支持自由软件的人士所发起的运动。自由软件运动是一个推广用户有使用、复制、研究、修改和分发软件等权利的社会运动。接近和相关的运动包括开放源代码运动及自由软件的开放源代码运动。这运动跟1970年代的黑客文化有渊源，而理查德·斯托曼是该运动的主要发起人以及精神领袖。[1] 


BSD
BSD (Berkeley Software Distribution，伯克利软件套件)是Unix的衍生系统，在1977至1995年间由加州大学伯克利分校开发和发布的。历史上， BSD曾经被认为是UNIX的一支——"BSD UNIX", 因为它和AT&T UNIX操作系统共享基础代码和设计。在20世纪80年代，衍生出了许多变形的UNIX授权软件。比较著名的如DEC的Ultrix及Sun公司的SunOS。1990年代，BSD很大程度上被System V4.x版以及OSF/1系统所取代，晚期BSD版本为几个开源软件开发提供了平台并且一直沿用至今。今天，“BSD”并不特指任何一个BSD衍生版本，而是类UNIX操作系统中的一个分支的总称。

英语
英语（English），属于印欧语系中日耳曼语族下的西日耳曼语支。根据以英语作为母语的人数计算，英语是最多国家使用的官方语言，英语也是世界上最广泛的第二语言，也是欧盟和许多国际组织和英联邦国家的官方语言，拥有世界第三位的母语使用者人数，仅少于汉语和西班牙语母语使用者人数。英语由古代从丹麦等斯堪的纳维亚半岛以及德国、荷兰及周边移民至不列颠群岛的盎格鲁、撒克逊和朱特部落的日耳曼人所说的语言演变而来，并通过英国的殖民活动传播到了世界各地。由于在历史上曾和多种民族语言接触，它的词汇从一元变为多元，语法从“多屈折”变为“少屈折”，语音也发生了规律性的变化。在19至20世纪，英国和美国在文化、经济、军事、政治和科学在世界上的领先地位使得英语成为一种国际语言。如今，许多国际场合都使用英语做为沟通媒介。英语也是与电脑联系最密切的语言，大多数编程语言都与英语有联系，而且随着网络的使用，英文的使用更普及。英语是联合国的工作语言之一。 一些人认为低地苏格兰语是与英语最接近的一个独立语言，而一些人则认为它是英语的一个方言。与古英语最接近的是古弗里西语，这种语言现在仍在德国北部和荷兰的弗里斯兰省使用。苏格兰语、低地撒克逊语、丹麦语、德语、荷兰语、南非荷兰语和英语也很接近。拥有血统的法国的诺曼人于11世纪征服英格兰王国，带来数万法语词汇和拉丁语词汇，很大程度地丰富了英语词汇外，相对也驱使不少原生的语汇作废。

编程语言
编程语言（programming language），是用来定义计算机程序的形式语言。它是一种被标准化的交流技巧，用来向计算机发出指令。一种计算机语言让程序员能够准确地定义计算机所需要使用的数据，并精确地定义在不同情况下所应当采取的行动。[1] 
最早的编程语言是在电脑发明之后产生的，当时是用来控制提花织布机及自动演奏钢琴的动作。在电脑领域已发明了上千不同的编程语言，而且每年仍有新的编程语言诞生。很多编程语言需要用指令方式说明计算的程序，而有些编程语言则属于声明式编程，说明需要的结果，而不说明如何计算。[1] 
编程语言的描述一般可以分为语法及语义。语法是说明编程语言中，哪些符号或文字的组合方式是正确的，语义则是对于编程的解释。有些语言是用规格文件定义，例如C语言的规格文件也是ISO标准中一部份，2011年后的版本为ISO/IEC 9899:2011，而其他语言（像Perl）有一份主要的编程语言实现文件，视为是参考实现。[1] 
编程语言俗称“计算机语言”，种类非常的多，总的来说可以分成机器语言、汇编语言、高级语言三大类。电脑每做的一次动作，一个步骤，都是按照已经用计算机语言编好的程序来执行的，程序是计算机要执行的指令的集合，而程序全部都是用我们所掌握的语言来编写的。所以人们要控制计算机一定要通过计算机语言向计算机发出命令。 目前通用的编程语言有两种形式：汇编语言和高级语言。[1] 


Shell程序
Shell是一种具备特殊功能的程序， 它是介于使用者和 UNIX/linux 操作系统之核心程序（kernel）间的一个接口。

qbasic
QBASIC是BASIC（Beginner's All-purpose Symbolic Instruction Code，初学者通用指令代码）语言的一个变种，由美国微软公司开发，1991年随MS-DOS 5.0推出。它不能被编译成独立的可执行文件，源代码在集成开发环境（IDE）中先被编译成中间代码，然后中间代码在IDE中被解释执行。它被设计用来代替GW-BASIC，并被集成在MS-DOS 5.0及其更高版本（包括Windows 95）中。QBASIC基于微软稍早推出的QuickBASIC 4.5，但去掉了后者的编译和连接部分。

quick basic
QBASIC是BASIC（Beginner's All-purpose Symbolic Instruction Code，初学者通用指令代码）语言的一个变种，由美国微软公司开发，1991年随MS-DOS 5.0推出。它不能被编译成独立的可执行文件，源代码在集成开发环境（IDE）中先被编译成中间代码，然后中间代码在IDE中被解释执行。它被设计用来代替GW-BASIC，并被集成在MS-DOS 5.0及其更高版本（包括Windows 95）中。QBASIC基于微软稍早推QuickBASIC 4.5，但去掉了后者的编译和连接部分。

编译方式
.编译方式：源程序的执行分两步：编译和运行。即先通过一个存放在计算机内的.称为编译程序的机器语言程序，把源程序全部翻译成和机器语言表示等价的目标程序代码，然后计算机在运行此目标代码，以完成源程序要处理的运算并取得结果。

解释执行
解释执行不依赖于平台，因为编译器会根据不同的平台进行解析。例如JS语言无论在windows平台还是在unix平台都可以使用。故可移植性强

表达式
表达式，是由数字、算符、数字分组符号（括号）、自由变量和约束变量等以能求得数值的有意义排列方法所得的组合。约束变量在表达式中已被指定数值，而自由变量则可以在表达式之外另行指定数值。

标识符
标示符（IDentifier）是指用来标识某个实体的一个符号。在不同的应用环境下有不同的含义。在日常生活中，标示符是用来指定某个东西、人，要用到它，他或她的名字；在数学中解方程时，我们也常常用到这样或那样的变量名或函数名；在编程语言中，标识符是用户编程时使用的名字，对于变量、常量、函数、语句块也有名字；我们统统称之为标识符。标识符可能是字、编号、字母、符号，也可能是由上述元素所组成。

中央处理器
中央处理器（CPU，Central Processing Unit）是一块超大规模的集成电路，是一台计算机的运算核心（Core）和控制核心（ Control Unit）。它的功能主要是解释计算机指令以及处理计算机软件中的数据。中央处理器主要包括运算器（算术逻辑运算单元，ALU，Arithmetic Logic Unit）和高速缓冲存储器（Cache）及实现它们之间联系的数据（Data）、控制及状态的总线（Bus）。它与内部存储器（Memory）和输入/输出（I/O）设备合称为电子计算机三大核心部件。

UCSD Pascal

BASIC
BASIC（Beginners' All-purpose Symbolic Instruction Code，又译培基），意思就是“初学者通用符号指令代码”，是一种设计给初学者使用的程序设计语言。BASIC是一种直译式的编程语言，在完成编写后不须经由编译及连结等手续即可执行，但如果需要单独执行时仍然需要将其建立成执行档。BASIC是由达特茅斯学院院长、匈牙利人约翰·凯梅尼（John G. Kemeny）与数学系教师托马斯·卡茨（Thomas E. Kurtz）共同研制出来的。1964年BASIC语言正式发布。第一个BASIC程序在1964年5月1日早上4时，由BASIC编译程序进行编译后成功运行[1] 
。1975年，比尔·盖茨把它移植到PC上。

字节
字节（Byte /bait/ n. [C]）是计算机信息技术用于计量存储容量的一种计量单位，也表示一些计算机编程语言中的数据类型和语言字符。

抽象语法树
抽象语法树（abstract syntax tree或者缩写为AST），或者语法树（syntax tree），是源代码的抽象语法结构的树状表现形式，这里特指编程语言的源代码。

Forth
Forth是六十年代末期，由Charles H. Moore发展出来在天文台使用的电脑自动控制系统及程序设计语言，允许使用者很容易组合系统已有的简单指令，定义成为功能较复杂的高阶指令。由于其结构精简、执行快速、操作方便，广为当代天文学界使用。八十年代以后，有爱用者成立Forth Interest Group在世界各地推广，并陆续在各类计算机上建立Forth系统及标准的语言。

递归缩写
递归缩写即递归首字缩写，是一种在全称中递归引用它自己的缩写。

emacs
Emacs，著名的集成开发环境和文本编辑器。Emacs被公认为是最受专业程序员喜爱的代码编辑器之一，另外一个vim。EMACS，即Editor MACroS（编辑器宏）的缩写，最初由Richard Stallman(理查德·马修·斯托曼)于1975年在MIT协同Guy Steele共同完成。这一创意的灵感来源于TECMAC和TMACS，它们是由Guy Steele、Dave Moon、Richard Greenblatt、Charles Frankston等人编写的宏文本编辑器。自诞生以来，Emacs演化出了众多分支，其中使用最广泛的两种是：1984年由Richard Stallman发起并由他维护至今的GNU Emacs，以及1991年发起的XEmacs。XEmacs是GNU Emacs的分支，至今仍保持着相当的兼容性。Emac使用Emacs Lisp，这种有着极强扩展性的编程语言，从而实现了包括编程、编译乃至网络浏览等等功能的扩展。[1] 


程序库
程序库(library),一个可供使用的各种标准程序、子程序、文件以及它们的目录等信息的有序集合。 汇集在一起的经常应用的程序。主要有：(1)标准子程序。如三角函数、反三角函数等子程序。(2)标准程序。实现一些常用的计算方法，如解常微分方程、偏微分方程、数值积分等程序。(3)服务性程序。如复制卡片、磁带、磁盘及调试用的各种程序等。程序库中的程序都是规范化的。所谓规范化有三重含义：① 同一库里所有程序的格式是统一的；② 对这些程序的调用方法是相同的；③ 每个程序所需参数的数目、顺序和类型都是严格规定好的。

林纳斯·托瓦兹
林纳斯·本纳第克特·托瓦兹（Linus Benedict Torvalds, 1969年~ ），著名的电脑程序员、黑客。Linux内核的发明人及该计划的合作者。托瓦兹利用个人时间及器材创造出了这套当今全球最流行的操作系统（作业系统）内核之一。现受聘于开放源代码开发实验室（OSDL：Open Source Development Labs, Inc），全力开发Linux内核。

beta
Beta，目前普遍认为是“测试”的意思。广义上对测试有着三个传统的称呼：Alpha（α）、Beta（β）和Gamma（γ），用来标识测试的阶段与范围。Alpha 指的是内测，即现在说的 CB，即开发团队内部测试的版本或者有限用户的体验测试版本。Beta 指的是公测，即针对所有用户公开的测试版本。而做过一些修改，成为正式发布的候选版本时（现在叫做 RC - Release Candidate），叫做 Gamma。

动态链接
动态链接英文是Dynamic Linking，他是使得不同的程序开发者和部门能够相对独立地开发和测试自己的程序模块，从某种意义上来讲大大促进了程序的开发效率，原先限制程序的规模也随之扩大。但是慢慢地静态链接的诸多缺点也逐步暴露出来，比如浪费内存和磁盘空间、模块更新困难等问题，使得人们不得不寻找一种更好的方式来组织程序的模块。

泛型编程
泛型编程（Generic Programming）最初提出时的动机很简单直接：发明一种语言机制，能够帮助实现一个通用的标准容器库。所谓通用的标准容器库，就是要能够做到，比如用一个List类存放所有可能类型的对象这样的事；泛型编程让你编写完全一般化并可重复使用的算法，其效率与针对某特定数据类型而设计的算法相同。泛型即是指具有在多种数据类型上皆可操作的含意，与模板有些相似。STL巨大，而且可以扩充，它包含很多计算机基本算法和数据结构，而且将算法与数据结构完全分离，其中算法是泛型的，不与任何特定数据结构或对象类型系在一起。

FORTRAN语言
FORTRAN语言是Formula Translation的缩写，意为“公式翻译”。它是为科学、工程问题或企事业管理中的那些能够用数学公式表达的问题而设计的，其数值计算的功能较强。

结构化编程
结构化程式设计（英语：Structured programming），一种编程典范。它采用子程序、程式码区块（英语：block structures）、for循环以及while循环等结构，来取代传统的 goto。希望借此来改善计算机程序的明晰性、品质以及开发时间，并且避免写出面条式代码。

贝尔实验室
美国贝尔实验室是晶体管、激光器、太阳能电池、发光二极管、数字交换机、通信卫星、电子数字计算机、蜂窝移动通信设备、长途电视传送、仿真语言、有声电影、立体声录音，以及通信网等许多重大发明的诞生地。自1925年以来，贝尔实验室共获得两万五千多项专利，现在，平均每个工作日获得三项多专利。贝尔实验室的使命是为客户创造、生产和提供富有创新性的技术，这些技术使朗讯科技（Lucent Technologies）公司在通信系统、产品、元件和网络软件方面处于全球领先地位。一共获得8项诺贝尔奖（其中7项物理学奖，1项化学奖）。

构造函数
构造函数 ，是一种特殊的方法。主要用来在创建对象时初始化对象， 即为对象成员变量赋初始值，总与new运算符一起使用在创建对象的语句中。特别的一个类可以有多个构造函数 ，可根据其参数个数的不同或参数类型的不同来区分它们 即构造函数的重载。

友元
友元可以是一个函数，该函数被称为友元函数；友元也可以是一个类，该类被称为友元类。

赋值运算符
基本的赋值运算符是“=”。他的优先级别低于其他的运算符，所以对该运算符往往最后读取。

重载
重载，简单说，就是函数或者方法有相同的名称，但是参数列表不相同的情形，这样的同名不同参数的函数或者方法之间，互相称之为重载函数或者方法。

递归
程序调用自身的编程技巧称为递归（ recursion）。递归做为一种算法在程序设计语言中广泛应用。 一个过程或函数在其定义或说明中有直接或间接调用自身的一种方法，它通常把一个大型复杂的问题层层转化为一个与原问题相似的规模较小的问题来求解，递归策略只需少量的程序就可描述出解题过程所需要的多次重复计算，大大地减少了程序的代码量。递归的能力在于用有限的语句来定义对象的无限集合。一般来说，递归需要有边界条件、递归前进段和递归返回段。当边界条件不满足时，递归前进；当边界条件满足时，递归返回。

国际标准化组织
国际标准化组织（International Organization for Standardization，ISO）简称ISO，是一个全球性的非政府组织，是国际标准化领域中一个十分重要的组织。。ISO一来源于希腊语“ISOS”，即“EQUAL”——平等之意。ISO国际标准组织成立于1946年，中国是ISO的正式成员，代表中国参加ISO的国家机构是中国国家技术监督局(CSBTS）ISO负责目前绝大部分领域（包括军工、石油、船舶等垄断行业）的标准化活动。ISO现有117个成员，包括117个国家和地区。ISO的最高权利机构是每年一次的“全体大会”，其日常办事机构是中央秘书处，设在瑞士日内瓦。中央秘书处现有170名职员，由秘书长领导。ISO的宗旨是“在世界上促进标准化及其相关活动的发展，以便于商品和服务的国际交换，在智力、科学、技术和经济领域开展合作。”ISO通过它的2856个技术结构开展技术活动，其中技术委员会（简称SC）共611个，工作组（WG）2022个，特别工作组38个。中国于1978年加入ISO，在2008年10月的第31届国际化标准组织大会上，中国正式成为ISO的常任理事国。国际标准化组织总部设于瑞士日内瓦，成员包括162个会员国。该组织自我定义为非政府组织，官方语言是英语、法语和俄语。参加者包括各会员国的国家标准机构和主要公司。它是世界上最大的非政府性标准化专门机构，是国际标准化领域中一个十分重要的组织。

名字空间
名字空间除了系统定义的名字空间之外，还可以自己定义，定义名字空间用关键字“namespace”，使用名字空间时用符号“::”指定。

c++0x
C++0x是C++11标准成为正式标准之前的草案临时名字。C++是具有国际标准的编程语言，通常称作ANSI/ISO C++，1998年国际标准组织（ISO）颁布了C++语言的国际标准ISO/IEC 1488-1998。。1998年是C++标准委员会成立的第一年，以后每5年视实际需要更新一次标准。2009年，C++标准有了一次更新，一般称该草案为C++0x。后来，2011年，C++新标准标准正式通过，更名为ISO/IEC 14882:2011，简称C++11。C++标准化委员会的主要焦点是在语言核心的发展上，C++0x关于核心语言的领域将被大幅改善，包括多线程支持、 泛型编程、统一的初始化，以及表现的加强。

